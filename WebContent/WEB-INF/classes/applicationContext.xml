<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:component-scan base-package="cn.tj"
		use-default-filters="false">
		<context:include-filter type="regex"
			expression=".service.*" />
		<context:include-filter type="regex"
			expression=".common.*" />
		<context:include-filter type="regex"
			expression=".dao.*" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

	<bean id="propertyConfigurer" class="cn.tj.ykt.financialoffice.fw.helper.PropertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${jdbc.driverClassName}"></property>
		<property name="driverUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password.enc}"></property>
		<property name="minimumConnectionCount" value="${min}"></property>
		<property name="maximumConnectionCount" value="${max}"></property>
		<property name="alias">
			<value>springDbPool</value>
		</property>
		<property name="prototypeCount">
			<value>10</value>
		</property>
		<property name="maximumActiveTime">
			<value>1000000</value>
		</property>
		<property name="trace">
			<value>false</value>
		</property>
		<property name="verbose">
			<value>false</value>
		</property>
		<property name="testBeforeUse">
			<value>true</value>
		</property>
		<property name="testAfterUse">
			<value>true</value>
		</property>
		<property name="houseKeepingTestSql">
			<value>select now()</value>
		</property>
	</bean>

	<!-- A3 数据源 -->
	<bean id="dataSource_a3" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${a3.jdbc.driverClassName}"></property>
		<property name="driverUrl" value="${a3.jdbc.url}"></property>
		<property name="user" value="${a3.jdbc.username}"></property>
		<property name="password" value="${a3.jdbc.password.enc}"></property>
		<property name="minimumConnectionCount" value="${a3.min}"></property>
		<property name="maximumConnectionCount" value="${a3.max}"></property>
		<property name="alias">
			<value>A3_Db_Pool</value>
		</property>
		<property name="prototypeCount">
			<value>10</value>
		</property>
		<property name="maximumActiveTime">
			<value>1000000</value>
		</property>
		<property name="trace">
			<value>false</value>
		</property>
		<property name="verbose">
			<value>false</value>
		</property>
		<property name="testBeforeUse">
			<value>true</value>
		</property>
		<property name="testAfterUse">
			<value>true</value>
		</property>
		<property name="houseKeepingTestSql">
			<value>select getdate()</value>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<!--prop key="connection.autocommit">true</prop>-->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="packagesToScan" value="cn.tj.ykt.financialoffice.fw.entity" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="sessionFactory_a3"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource_a3" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<!--prop key="connection.autocommit">true</prop>-->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="packagesToScan" value="cn.tj.ykt.financialoffice.fw.entity_a3" />
	</bean>

	<bean id="transactionManager_a3"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory_a3" />
	</bean>

	<bean id="genericDao" class="cn.tj.ykt.financialoffice.fw.dao.GenericDaoImpl"
		autowire="byName">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="pageDao" class="cn.tj.ykt.financialoffice.fw.dao.MysqlPageDaoImpl"
		autowire="byName">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="nativeDao" class="cn.tj.ykt.financialoffice.fw.dao.NativeDaoImpl"
		autowire="byName">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="genericDao_a3" class="cn.tj.ykt.financialoffice.fw.dao.GenericDaoImpl"
		autowire="byName">
		<property name="sessionFactory" ref="sessionFactory_a3" />
	</bean>

	<bean id="nativeDao_a3" class="cn.tj.ykt.financialoffice.fw.dao.NativeDaoImpl"
		autowire="byName">
		<property name="sessionFactory" ref="sessionFactory_a3" />
	</bean>

	<tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="transactionInterceptor_a3" transaction-manager="transactionManager_a3">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*Dao</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*Dao_a3</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor_a3</value>
			</list>
		</property>
	</bean>

	<!-- 装载 applicationContext -->
	<bean class="cn.tj.ykt.financialoffice.fw.helper.SpringUtil"></bean>

	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey">
			<value>applicationContext</value>
		</property>
	</bean>

	<bean id="qm" class="cn.tj.ykt.financialoffice.fw.schedule.QuartzManager">
		<property name="scheduler" ref="scheduler" />
	</bean>
	<bean id="quartzStart" class="cn.tj.ykt.financialoffice.fw.schedule.QuartzStartForXml">
		<property name="qm" ref="qm" />
	</bean>

	<!-- java melody -->
	<bean id="facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor">
		<property name="pointcut">
			<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
				<property name="pattern" value=".*execute.*" /><!--正则表达式 -->
			</bean>
		</property>
	</bean>
</beans>